services:
  # backend:
  #   build: ./backend
  #   volumes:
  #     - ./backend:/app:cached
  #     - backend_venv:/app/.venv
  #   ports:
  #     - "8000:8000"
  #   healthcheck:
  #     test: [ "CMD", "curl", "-f", "http://localhost:8000/healthcheck" ]
  #     interval: 30s
  #     timeout: 30s
  #     retries: 5
  #     start_period: 30s
  #   depends_on:
  #     minio:
  #       condition: service_healthy
  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: always
  # frontend:
  #   build: ./frontend
  #   volumes:
  #     - ./frontend:/app:cached
  #     - frontend_node_modules:/app/node_modules 
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    restart: always
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
  worker:
    build:
      context: ./backend
    volumes:
      - ./backend:/app:cached
      - backend_venv:/app/.venv
    working_dir: /app
    environment:
      - REDIS_URL=redis://redis:6379
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_BUCKET=emotion-detection
      - MINIO_REGION=us-east-1
      - MONGODB_URI=mongodb://mongodb:27017/
    # command: [ "rq", "worker", "emotion_detection" ]
    command: [ "python", "worker.py" ]
    depends_on:
      - redis
      - minio
      - mongodb

volumes:
  minio-data:
  frontend_node_modules:
  mongo-data:
  backend_src:
    driver: local
  backend_venv:
    driver: local
